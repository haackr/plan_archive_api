generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["microsoftSqlServer"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model ArchAdmin {
  useridnum Int     @id
  username  String?
  password  String?
}

model MiscSheetsData {
  Title          String?
  Sheet_Number   String?  @map("Sheet Number")
  Year           String?
  Month          String?
  Day            String?
  LocationNumber String?
  FilePathTIFF   String?
  FilePathPNG    String?
  FilePathPDF    String?
  FilePathDWG    String?
  id             Int      @id @default(autoincrement())
  school_id      Int?
  Schools        Schools? @relation(fields: [school_id], references: [id])
}

model Schools {
  SchoolID       String           @unique
  SchoolName     String
  ClusterID      String?
  id             Int              @id @default(autoincrement())
  Cluster        Schools?         @relation("SchoolsToSchools_ClusterID", fields: [ClusterID], references: [SchoolID])
  MiscSheetsData MiscSheetsData[]
  ClusterSchools Schools[]        @relation("SchoolsToSchools_ClusterID")
  SetsData       SetsData[]
  SheetsData     SheetsData[]
}

model SetsData {
  ID             String
  Year           String?
  Month          String?
  Day            String?
  Title          String?
  LocationNumber String?
  Type           String?
  Key            Int          @id @default(autoincrement())
  school_id      Int?
  Schools        Schools?     @relation(fields: [school_id], references: [id])
  SheetsData     SheetsData[]
}

model SheetsData {
  Title          String?
  Sheet_Number   String?   @map("Sheet Number")
  Year           String?
  Month          String?
  Day            String?
  LocationNumber String?
  SetID          String?
  FilePathTIFF   String?
  FilePathPNG    String?
  FilePathPDF    String?
  FilePathDWG    String?
  set_id         Int?
  id             Int       @id @default(autoincrement())
  school_id      Int?
  Schools        Schools?  @relation(fields: [school_id], references: [id])
  SetsData       SetsData? @relation(fields: [set_id], references: [Key])
}

model User {
  id        String  @id @default(uuid())
  username  String  @unique
  password  String
  isAdmin   Boolean @default(false)
  confirmed Boolean @default(false)
}
