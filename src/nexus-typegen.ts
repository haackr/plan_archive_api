/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as ContextModule from "./api/context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NestedStringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  SchoolsCreateInput: { // input type
    Cluster?: NexusGenInputs['SchoolsCreateOneWithoutClusterSchoolsInput'] | null; // SchoolsCreateOneWithoutClusterSchoolsInput
    ClusterSchools?: NexusGenInputs['SchoolsCreateManyWithoutClusterInput'] | null; // SchoolsCreateManyWithoutClusterInput
    SchoolID: string; // String!
    SchoolName: string; // String!
  }
  SchoolsCreateManyWithoutClusterInput: { // input type
    connect?: NexusGenInputs['SchoolsWhereUniqueInput'][] | null; // [SchoolsWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['SchoolsCreateOrConnectWithoutClusterInput'][] | null; // [SchoolsCreateOrConnectWithoutClusterInput!]
    create?: NexusGenInputs['SchoolsCreateWithoutClusterInput'][] | null; // [SchoolsCreateWithoutClusterInput!]
  }
  SchoolsCreateOneWithoutClusterSchoolsInput: { // input type
    connect?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
    connectOrCreate?: NexusGenInputs['SchoolsCreateOrConnectWithoutClusterSchoolsInput'] | null; // SchoolsCreateOrConnectWithoutClusterSchoolsInput
    create?: NexusGenInputs['SchoolsCreateWithoutClusterSchoolsInput'] | null; // SchoolsCreateWithoutClusterSchoolsInput
  }
  SchoolsCreateOrConnectWithoutClusterInput: { // input type
    create: NexusGenInputs['SchoolsCreateWithoutClusterInput']; // SchoolsCreateWithoutClusterInput!
    where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
  }
  SchoolsCreateOrConnectWithoutClusterSchoolsInput: { // input type
    create: NexusGenInputs['SchoolsCreateWithoutClusterSchoolsInput']; // SchoolsCreateWithoutClusterSchoolsInput!
    where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
  }
  SchoolsCreateWithoutClusterInput: { // input type
    ClusterSchools?: NexusGenInputs['SchoolsCreateManyWithoutClusterInput'] | null; // SchoolsCreateManyWithoutClusterInput
    SchoolID: string; // String!
    SchoolName: string; // String!
  }
  SchoolsCreateWithoutClusterSchoolsInput: { // input type
    Cluster?: NexusGenInputs['SchoolsCreateOneWithoutClusterSchoolsInput'] | null; // SchoolsCreateOneWithoutClusterSchoolsInput
    SchoolID: string; // String!
    SchoolName: string; // String!
  }
  SchoolsScalarWhereInput: { // input type
    AND?: NexusGenInputs['SchoolsScalarWhereInput'][] | null; // [SchoolsScalarWhereInput!]
    ClusterID?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    NOT?: NexusGenInputs['SchoolsScalarWhereInput'][] | null; // [SchoolsScalarWhereInput!]
    OR?: NexusGenInputs['SchoolsScalarWhereInput'][] | null; // [SchoolsScalarWhereInput!]
    SchoolID?: NexusGenInputs['StringFilter'] | null; // StringFilter
    SchoolName?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  SchoolsUpdateInput: { // input type
    Cluster?: NexusGenInputs['SchoolsUpdateOneWithoutClusterSchoolsInput'] | null; // SchoolsUpdateOneWithoutClusterSchoolsInput
    ClusterSchools?: NexusGenInputs['SchoolsUpdateManyWithoutClusterInput'] | null; // SchoolsUpdateManyWithoutClusterInput
    SchoolID?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    SchoolName?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  SchoolsUpdateManyMutationInput: { // input type
    SchoolID?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    SchoolName?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  SchoolsUpdateManyWithWhereWithoutClusterInput: { // input type
    data: NexusGenInputs['SchoolsUpdateManyMutationInput']; // SchoolsUpdateManyMutationInput!
    where: NexusGenInputs['SchoolsScalarWhereInput']; // SchoolsScalarWhereInput!
  }
  SchoolsUpdateManyWithoutClusterInput: { // input type
    connect?: NexusGenInputs['SchoolsWhereUniqueInput'][] | null; // [SchoolsWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['SchoolsCreateOrConnectWithoutClusterInput'][] | null; // [SchoolsCreateOrConnectWithoutClusterInput!]
    create?: NexusGenInputs['SchoolsCreateWithoutClusterInput'][] | null; // [SchoolsCreateWithoutClusterInput!]
    delete?: NexusGenInputs['SchoolsWhereUniqueInput'][] | null; // [SchoolsWhereUniqueInput!]
    deleteMany?: NexusGenInputs['SchoolsScalarWhereInput'][] | null; // [SchoolsScalarWhereInput!]
    disconnect?: NexusGenInputs['SchoolsWhereUniqueInput'][] | null; // [SchoolsWhereUniqueInput!]
    set?: NexusGenInputs['SchoolsWhereUniqueInput'][] | null; // [SchoolsWhereUniqueInput!]
    update?: NexusGenInputs['SchoolsUpdateWithWhereUniqueWithoutClusterInput'][] | null; // [SchoolsUpdateWithWhereUniqueWithoutClusterInput!]
    updateMany?: NexusGenInputs['SchoolsUpdateManyWithWhereWithoutClusterInput'][] | null; // [SchoolsUpdateManyWithWhereWithoutClusterInput!]
    upsert?: NexusGenInputs['SchoolsUpsertWithWhereUniqueWithoutClusterInput'][] | null; // [SchoolsUpsertWithWhereUniqueWithoutClusterInput!]
  }
  SchoolsUpdateOneWithoutClusterSchoolsInput: { // input type
    connect?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
    connectOrCreate?: NexusGenInputs['SchoolsCreateOrConnectWithoutClusterSchoolsInput'] | null; // SchoolsCreateOrConnectWithoutClusterSchoolsInput
    create?: NexusGenInputs['SchoolsCreateWithoutClusterSchoolsInput'] | null; // SchoolsCreateWithoutClusterSchoolsInput
    delete?: boolean | null; // Boolean
    disconnect?: boolean | null; // Boolean
    update?: NexusGenInputs['SchoolsUpdateWithoutClusterSchoolsInput'] | null; // SchoolsUpdateWithoutClusterSchoolsInput
    upsert?: NexusGenInputs['SchoolsUpsertWithoutClusterSchoolsInput'] | null; // SchoolsUpsertWithoutClusterSchoolsInput
  }
  SchoolsUpdateWithWhereUniqueWithoutClusterInput: { // input type
    data: NexusGenInputs['SchoolsUpdateWithoutClusterInput']; // SchoolsUpdateWithoutClusterInput!
    where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
  }
  SchoolsUpdateWithoutClusterInput: { // input type
    ClusterSchools?: NexusGenInputs['SchoolsUpdateManyWithoutClusterInput'] | null; // SchoolsUpdateManyWithoutClusterInput
    SchoolID?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    SchoolName?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  SchoolsUpdateWithoutClusterSchoolsInput: { // input type
    Cluster?: NexusGenInputs['SchoolsUpdateOneWithoutClusterSchoolsInput'] | null; // SchoolsUpdateOneWithoutClusterSchoolsInput
    SchoolID?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    SchoolName?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
  }
  SchoolsUpsertWithWhereUniqueWithoutClusterInput: { // input type
    create: NexusGenInputs['SchoolsCreateWithoutClusterInput']; // SchoolsCreateWithoutClusterInput!
    update: NexusGenInputs['SchoolsUpdateWithoutClusterInput']; // SchoolsUpdateWithoutClusterInput!
    where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
  }
  SchoolsUpsertWithoutClusterSchoolsInput: { // input type
    create: NexusGenInputs['SchoolsCreateWithoutClusterSchoolsInput']; // SchoolsCreateWithoutClusterSchoolsInput!
    update: NexusGenInputs['SchoolsUpdateWithoutClusterSchoolsInput']; // SchoolsUpdateWithoutClusterSchoolsInput!
  }
  SchoolsWhereUniqueInput: { // input type
    SchoolID?: string | null; // String
  }
  StringFieldUpdateOperationsInput: { // input type
    set?: string | null; // String
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Mutation: {};
  Query: {};
  Schools: { // root type
    ClusterID?: string | null; // String
    SchoolID: string; // String!
    SchoolName: string; // String!
  }
  User: { // root type
    id: string; // String!
    username: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createOneSchools: NexusGenRootTypes['Schools']; // Schools!
    createSchool: NexusGenRootTypes['Schools']; // Schools!
    deleteOneSchools: NexusGenRootTypes['Schools'] | null; // Schools
    deleteSchool: NexusGenRootTypes['Schools']; // Schools!
    login: NexusGenRootTypes['User'] | null; // User
    register: NexusGenRootTypes['User'] | null; // User
    updateOneSchools: NexusGenRootTypes['Schools'] | null; // Schools
    updateSchool: NexusGenRootTypes['Schools']; // Schools!
  }
  Query: { // field return type
    allClusters: Array<NexusGenRootTypes['Schools'] | null>; // [Schools]!
    allSchools: Array<NexusGenRootTypes['Schools'] | null>; // [Schools]!
    allUsers: Array<NexusGenRootTypes['User'] | null>; // [User]!
    schools: NexusGenRootTypes['Schools'][]; // [Schools!]!
  }
  Schools: { // field return type
    Cluster: NexusGenRootTypes['Schools'] | null; // Schools
    ClusterID: string | null; // String
    ClusterSchools: NexusGenRootTypes['Schools'][]; // [Schools!]!
    SchoolID: string; // String!
    SchoolName: string; // String!
  }
  User: { // field return type
    id: string; // String!
    isAdmin: boolean; // Boolean!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createOneSchools: 'Schools'
    createSchool: 'Schools'
    deleteOneSchools: 'Schools'
    deleteSchool: 'Schools'
    login: 'User'
    register: 'User'
    updateOneSchools: 'Schools'
    updateSchool: 'Schools'
  }
  Query: { // field return type name
    allClusters: 'Schools'
    allSchools: 'Schools'
    allUsers: 'User'
    schools: 'Schools'
  }
  Schools: { // field return type name
    Cluster: 'Schools'
    ClusterID: 'String'
    ClusterSchools: 'Schools'
    SchoolID: 'String'
    SchoolName: 'String'
  }
  User: { // field return type name
    id: 'String'
    isAdmin: 'Boolean'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOneSchools: { // args
      data: NexusGenInputs['SchoolsCreateInput']; // SchoolsCreateInput!
    }
    createSchool: { // args
      ClusterID?: string | null; // String
      SchoolId: string; // String!
      SchoolName: string; // String!
    }
    deleteOneSchools: { // args
      where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
    }
    deleteSchool: { // args
      SchoolId: string; // String!
    }
    login: { // args
      password: string; // String!
      username: string; // String!
    }
    register: { // args
      password: string; // String!
      passwordVerify: string; // String!
      username: string; // String!
    }
    updateOneSchools: { // args
      data: NexusGenInputs['SchoolsUpdateInput']; // SchoolsUpdateInput!
      where: NexusGenInputs['SchoolsWhereUniqueInput']; // SchoolsWhereUniqueInput!
    }
    updateSchool: { // args
      ClusterId?: string | null; // String
      NewSchoolId?: string | null; // String
      SchoolId: string; // String!
      SchoolName?: string | null; // String
    }
  }
  Query: {
    schools: { // args
      after?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
      before?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Schools: {
    ClusterSchools: { // args
      after?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
      before?: NexusGenInputs['SchoolsWhereUniqueInput'] | null; // SchoolsWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: ContextModule.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}