### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type MiscSheetsData {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: Schools
  Sheet_Number: String
  Title: String
  Year: String
  id: Int!
  school_id: Int
}

input MiscSheetsDataCreateInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolsCreateNestedOneWithoutMiscSheetsDataInput
  Sheet_Number: String
  Title: String
  Year: String
}

input MiscSheetsDataCreateNestedManyWithoutSchoolsInput {
  connect: [MiscSheetsDataWhereUniqueInput!]
  connectOrCreate: [MiscSheetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [MiscSheetsDataCreateWithoutSchoolsInput!]
}

input MiscSheetsDataCreateOrConnectWithoutSchoolsInput {
  create: MiscSheetsDataCreateWithoutSchoolsInput!
  where: MiscSheetsDataWhereUniqueInput!
}

input MiscSheetsDataCreateWithoutSchoolsInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Sheet_Number: String
  Title: String
  Year: String
}

input MiscSheetsDataScalarWhereInput {
  AND: [MiscSheetsDataScalarWhereInput!]
  Day: StringNullableFilter
  FilePathDWG: StringNullableFilter
  FilePathPDF: StringNullableFilter
  FilePathPNG: StringNullableFilter
  FilePathTIFF: StringNullableFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [MiscSheetsDataScalarWhereInput!]
  OR: [MiscSheetsDataScalarWhereInput!]
  Sheet_Number: StringNullableFilter
  Title: StringNullableFilter
  Year: StringNullableFilter
  id: IntFilter
  school_id: IntNullableFilter
}

input MiscSheetsDataUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolsUpdateOneWithoutMiscSheetsDataInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetsDataUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetsDataUpdateManyWithWhereWithoutSchoolsInput {
  data: MiscSheetsDataUpdateManyMutationInput!
  where: MiscSheetsDataScalarWhereInput!
}

input MiscSheetsDataUpdateManyWithoutSchoolsInput {
  connect: [MiscSheetsDataWhereUniqueInput!]
  connectOrCreate: [MiscSheetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [MiscSheetsDataCreateWithoutSchoolsInput!]
  delete: [MiscSheetsDataWhereUniqueInput!]
  deleteMany: [MiscSheetsDataScalarWhereInput!]
  disconnect: [MiscSheetsDataWhereUniqueInput!]
  set: [MiscSheetsDataWhereUniqueInput!]
  update: [MiscSheetsDataUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [MiscSheetsDataUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [MiscSheetsDataUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input MiscSheetsDataUpdateWithWhereUniqueWithoutSchoolsInput {
  data: MiscSheetsDataUpdateWithoutSchoolsInput!
  where: MiscSheetsDataWhereUniqueInput!
}

input MiscSheetsDataUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetsDataUpsertWithWhereUniqueWithoutSchoolsInput {
  create: MiscSheetsDataCreateWithoutSchoolsInput!
  update: MiscSheetsDataUpdateWithoutSchoolsInput!
  where: MiscSheetsDataWhereUniqueInput!
}

input MiscSheetsDataWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneMiscSheetsData(data: MiscSheetsDataCreateInput!): MiscSheetsData!
  createOneSchools(data: SchoolsCreateInput!): Schools!
  createOneSetsData(data: SetsDataCreateInput!): SetsData!
  createOneSheetsData(data: SheetsDataCreateInput!): SheetsData!
  deleteOneMiscSheetsData(where: MiscSheetsDataWhereUniqueInput!): MiscSheetsData
  deleteOneSchools(where: SchoolsWhereUniqueInput!): Schools
  deleteOneSetsData(where: SetsDataWhereUniqueInput!): SetsData
  deleteOneSheetsData(where: SheetsDataWhereUniqueInput!): SheetsData
  deleteOneUser(where: UserWhereUniqueInput!): User
  login(password: String!, username: String!): User
  logout: User
  register(password: String!, passwordVerify: String!, username: String!): User
  updateOneMiscSheetsData(data: MiscSheetsDataUpdateInput!, where: MiscSheetsDataWhereUniqueInput!): MiscSheetsData
  updateOneSchools(data: SchoolsUpdateInput!, where: SchoolsWhereUniqueInput!): Schools
  updateOneSetsData(data: SetsDataUpdateInput!, where: SetsDataWhereUniqueInput!): SetsData
  updateOneSheetsData(data: SheetsDataUpdateInput!, where: SheetsDataWhereUniqueInput!): SheetsData
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  allClusters: [Schools]!
  allSchools: [Schools]!
  allUsers: [User]!
  miscSheetsData(after: MiscSheetsDataWhereUniqueInput, before: MiscSheetsDataWhereUniqueInput, first: Int, last: Int): [MiscSheetsData!]!
  schools(after: SchoolsWhereUniqueInput, before: SchoolsWhereUniqueInput, first: Int, last: Int): [Schools!]!
  setsData(after: SetsDataWhereUniqueInput, before: SetsDataWhereUniqueInput, first: Int, last: Int): [SetsData!]!
  sheetsData(after: SheetsDataWhereUniqueInput, before: SheetsDataWhereUniqueInput, first: Int, last: Int): [SheetsData!]!
}

type Schools {
  Cluster: Schools
  ClusterID: String
  ClusterSchools(after: SchoolsWhereUniqueInput, before: SchoolsWhereUniqueInput, first: Int, last: Int): [Schools!]!
  MiscSheetsData(after: MiscSheetsDataWhereUniqueInput, before: MiscSheetsDataWhereUniqueInput, first: Int, last: Int): [MiscSheetsData!]!
  SchoolID: String!
  SchoolName: String!
  SetsData(after: SetsDataWhereUniqueInput, before: SetsDataWhereUniqueInput, first: Int, last: Int): [SetsData!]!
  SheetsData(after: SheetsDataWhereUniqueInput, before: SheetsDataWhereUniqueInput, first: Int, last: Int): [SheetsData!]!
  id: Int!
}

input SchoolsCreateInput {
  Cluster: SchoolsCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsCreateNestedManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  SetsData: SetsDataCreateNestedManyWithoutSchoolsInput
  SheetsData: SheetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsCreateNestedManyWithoutClusterInput {
  connect: [SchoolsWhereUniqueInput!]
  connectOrCreate: [SchoolsCreateOrConnectWithoutClusterInput!]
  create: [SchoolsCreateWithoutClusterInput!]
}

input SchoolsCreateNestedOneWithoutClusterSchoolsInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutClusterSchoolsInput
  create: SchoolsCreateWithoutClusterSchoolsInput
}

input SchoolsCreateNestedOneWithoutMiscSheetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutMiscSheetsDataInput
  create: SchoolsCreateWithoutMiscSheetsDataInput
}

input SchoolsCreateNestedOneWithoutSetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutSetsDataInput
  create: SchoolsCreateWithoutSetsDataInput
}

input SchoolsCreateNestedOneWithoutSheetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutSheetsDataInput
  create: SchoolsCreateWithoutSheetsDataInput
}

input SchoolsCreateOrConnectWithoutClusterInput {
  create: SchoolsCreateWithoutClusterInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsCreateOrConnectWithoutClusterSchoolsInput {
  create: SchoolsCreateWithoutClusterSchoolsInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsCreateOrConnectWithoutMiscSheetsDataInput {
  create: SchoolsCreateWithoutMiscSheetsDataInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsCreateOrConnectWithoutSetsDataInput {
  create: SchoolsCreateWithoutSetsDataInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsCreateOrConnectWithoutSheetsDataInput {
  create: SchoolsCreateWithoutSheetsDataInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsCreateWithoutClusterInput {
  ClusterSchools: SchoolsCreateNestedManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  SetsData: SetsDataCreateNestedManyWithoutSchoolsInput
  SheetsData: SheetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsCreateWithoutClusterSchoolsInput {
  Cluster: SchoolsCreateNestedOneWithoutClusterSchoolsInput
  MiscSheetsData: MiscSheetsDataCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  SetsData: SetsDataCreateNestedManyWithoutSchoolsInput
  SheetsData: SheetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsCreateWithoutMiscSheetsDataInput {
  Cluster: SchoolsCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsCreateNestedManyWithoutClusterInput
  SchoolID: String!
  SchoolName: String!
  SetsData: SetsDataCreateNestedManyWithoutSchoolsInput
  SheetsData: SheetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsCreateWithoutSetsDataInput {
  Cluster: SchoolsCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsCreateNestedManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  SheetsData: SheetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsCreateWithoutSheetsDataInput {
  Cluster: SchoolsCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsCreateNestedManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  SetsData: SetsDataCreateNestedManyWithoutSchoolsInput
}

input SchoolsScalarWhereInput {
  AND: [SchoolsScalarWhereInput!]
  ClusterID: StringNullableFilter
  NOT: [SchoolsScalarWhereInput!]
  OR: [SchoolsScalarWhereInput!]
  SchoolID: StringFilter
  SchoolName: StringFilter
  id: IntFilter
}

input SchoolsUpdateInput {
  Cluster: SchoolsUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsUpdateManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateManyWithoutSchoolsInput
  SheetsData: SheetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpdateManyMutationInput {
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
}

input SchoolsUpdateManyWithWhereWithoutClusterInput {
  data: SchoolsUpdateManyMutationInput!
  where: SchoolsScalarWhereInput!
}

input SchoolsUpdateManyWithoutClusterInput {
  connect: [SchoolsWhereUniqueInput!]
  connectOrCreate: [SchoolsCreateOrConnectWithoutClusterInput!]
  create: [SchoolsCreateWithoutClusterInput!]
  delete: [SchoolsWhereUniqueInput!]
  deleteMany: [SchoolsScalarWhereInput!]
  disconnect: [SchoolsWhereUniqueInput!]
  set: [SchoolsWhereUniqueInput!]
  update: [SchoolsUpdateWithWhereUniqueWithoutClusterInput!]
  updateMany: [SchoolsUpdateManyWithWhereWithoutClusterInput!]
  upsert: [SchoolsUpsertWithWhereUniqueWithoutClusterInput!]
}

input SchoolsUpdateOneWithoutClusterSchoolsInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutClusterSchoolsInput
  create: SchoolsCreateWithoutClusterSchoolsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolsUpdateWithoutClusterSchoolsInput
  upsert: SchoolsUpsertWithoutClusterSchoolsInput
}

input SchoolsUpdateOneWithoutMiscSheetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutMiscSheetsDataInput
  create: SchoolsCreateWithoutMiscSheetsDataInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolsUpdateWithoutMiscSheetsDataInput
  upsert: SchoolsUpsertWithoutMiscSheetsDataInput
}

input SchoolsUpdateOneWithoutSetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutSetsDataInput
  create: SchoolsCreateWithoutSetsDataInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolsUpdateWithoutSetsDataInput
  upsert: SchoolsUpsertWithoutSetsDataInput
}

input SchoolsUpdateOneWithoutSheetsDataInput {
  connect: SchoolsWhereUniqueInput
  connectOrCreate: SchoolsCreateOrConnectWithoutSheetsDataInput
  create: SchoolsCreateWithoutSheetsDataInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolsUpdateWithoutSheetsDataInput
  upsert: SchoolsUpsertWithoutSheetsDataInput
}

input SchoolsUpdateWithWhereUniqueWithoutClusterInput {
  data: SchoolsUpdateWithoutClusterInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsUpdateWithoutClusterInput {
  ClusterSchools: SchoolsUpdateManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateManyWithoutSchoolsInput
  SheetsData: SheetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpdateWithoutClusterSchoolsInput {
  Cluster: SchoolsUpdateOneWithoutClusterSchoolsInput
  MiscSheetsData: MiscSheetsDataUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateManyWithoutSchoolsInput
  SheetsData: SheetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpdateWithoutMiscSheetsDataInput {
  Cluster: SchoolsUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsUpdateManyWithoutClusterInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateManyWithoutSchoolsInput
  SheetsData: SheetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpdateWithoutSetsDataInput {
  Cluster: SchoolsUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsUpdateManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SheetsData: SheetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpdateWithoutSheetsDataInput {
  Cluster: SchoolsUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolsUpdateManyWithoutClusterInput
  MiscSheetsData: MiscSheetsDataUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateManyWithoutSchoolsInput
}

input SchoolsUpsertWithWhereUniqueWithoutClusterInput {
  create: SchoolsCreateWithoutClusterInput!
  update: SchoolsUpdateWithoutClusterInput!
  where: SchoolsWhereUniqueInput!
}

input SchoolsUpsertWithoutClusterSchoolsInput {
  create: SchoolsCreateWithoutClusterSchoolsInput!
  update: SchoolsUpdateWithoutClusterSchoolsInput!
}

input SchoolsUpsertWithoutMiscSheetsDataInput {
  create: SchoolsCreateWithoutMiscSheetsDataInput!
  update: SchoolsUpdateWithoutMiscSheetsDataInput!
}

input SchoolsUpsertWithoutSetsDataInput {
  create: SchoolsCreateWithoutSetsDataInput!
  update: SchoolsUpdateWithoutSetsDataInput!
}

input SchoolsUpsertWithoutSheetsDataInput {
  create: SchoolsCreateWithoutSheetsDataInput!
  update: SchoolsUpdateWithoutSheetsDataInput!
}

input SchoolsWhereUniqueInput {
  SchoolID: String
  id: Int
}

type SetsData {
  Day: String
  ID: String!
  Key: Int!
  LocationNumber: String
  Month: String
  Schools: Schools
  SheetsData(after: SheetsDataWhereUniqueInput, before: SheetsDataWhereUniqueInput, first: Int, last: Int): [SheetsData!]!
  Title: String
  Type: String
  Year: String
  school_id: Int
}

input SetsDataCreateInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  Schools: SchoolsCreateNestedOneWithoutSetsDataInput
  SheetsData: SheetsDataCreateNestedManyWithoutSetsDataInput
  Title: String
  Type: String
  Year: String
}

input SetsDataCreateNestedManyWithoutSchoolsInput {
  connect: [SetsDataWhereUniqueInput!]
  connectOrCreate: [SetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [SetsDataCreateWithoutSchoolsInput!]
}

input SetsDataCreateNestedOneWithoutSheetsDataInput {
  connect: SetsDataWhereUniqueInput
  connectOrCreate: SetsDataCreateOrConnectWithoutSheetsDataInput
  create: SetsDataCreateWithoutSheetsDataInput
}

input SetsDataCreateOrConnectWithoutSchoolsInput {
  create: SetsDataCreateWithoutSchoolsInput!
  where: SetsDataWhereUniqueInput!
}

input SetsDataCreateOrConnectWithoutSheetsDataInput {
  create: SetsDataCreateWithoutSheetsDataInput!
  where: SetsDataWhereUniqueInput!
}

input SetsDataCreateWithoutSchoolsInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  SheetsData: SheetsDataCreateNestedManyWithoutSetsDataInput
  Title: String
  Type: String
  Year: String
}

input SetsDataCreateWithoutSheetsDataInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  Schools: SchoolsCreateNestedOneWithoutSetsDataInput
  Title: String
  Type: String
  Year: String
}

input SetsDataScalarWhereInput {
  AND: [SetsDataScalarWhereInput!]
  Day: StringNullableFilter
  ID: StringFilter
  Key: IntFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [SetsDataScalarWhereInput!]
  OR: [SetsDataScalarWhereInput!]
  Title: StringNullableFilter
  Type: StringNullableFilter
  Year: StringNullableFilter
  school_id: IntNullableFilter
}

input SetsDataUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolsUpdateOneWithoutSetsDataInput
  SheetsData: SheetsDataUpdateManyWithoutSetsDataInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetsDataUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetsDataUpdateManyWithWhereWithoutSchoolsInput {
  data: SetsDataUpdateManyMutationInput!
  where: SetsDataScalarWhereInput!
}

input SetsDataUpdateManyWithoutSchoolsInput {
  connect: [SetsDataWhereUniqueInput!]
  connectOrCreate: [SetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [SetsDataCreateWithoutSchoolsInput!]
  delete: [SetsDataWhereUniqueInput!]
  deleteMany: [SetsDataScalarWhereInput!]
  disconnect: [SetsDataWhereUniqueInput!]
  set: [SetsDataWhereUniqueInput!]
  update: [SetsDataUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [SetsDataUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [SetsDataUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input SetsDataUpdateOneWithoutSheetsDataInput {
  connect: SetsDataWhereUniqueInput
  connectOrCreate: SetsDataCreateOrConnectWithoutSheetsDataInput
  create: SetsDataCreateWithoutSheetsDataInput
  delete: Boolean
  disconnect: Boolean
  update: SetsDataUpdateWithoutSheetsDataInput
  upsert: SetsDataUpsertWithoutSheetsDataInput
}

input SetsDataUpdateWithWhereUniqueWithoutSchoolsInput {
  data: SetsDataUpdateWithoutSchoolsInput!
  where: SetsDataWhereUniqueInput!
}

input SetsDataUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  SheetsData: SheetsDataUpdateManyWithoutSetsDataInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetsDataUpdateWithoutSheetsDataInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolsUpdateOneWithoutSetsDataInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetsDataUpsertWithWhereUniqueWithoutSchoolsInput {
  create: SetsDataCreateWithoutSchoolsInput!
  update: SetsDataUpdateWithoutSchoolsInput!
  where: SetsDataWhereUniqueInput!
}

input SetsDataUpsertWithoutSheetsDataInput {
  create: SetsDataCreateWithoutSheetsDataInput!
  update: SetsDataUpdateWithoutSheetsDataInput!
}

input SetsDataWhereUniqueInput {
  Key: Int
}

type SheetsData {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  Month: String
  Schools: Schools
  SetsData: SetsData
  Sheet_Number: String
  Title: String
  Year: String
  id: Int!
  school_id: Int
  set_id: Int
}

input SheetsDataCreateInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolsCreateNestedOneWithoutSheetsDataInput
  SetID: String
  SetsData: SetsDataCreateNestedOneWithoutSheetsDataInput
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetsDataCreateNestedManyWithoutSchoolsInput {
  connect: [SheetsDataWhereUniqueInput!]
  connectOrCreate: [SheetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [SheetsDataCreateWithoutSchoolsInput!]
}

input SheetsDataCreateNestedManyWithoutSetsDataInput {
  connect: [SheetsDataWhereUniqueInput!]
  connectOrCreate: [SheetsDataCreateOrConnectWithoutSetsDataInput!]
  create: [SheetsDataCreateWithoutSetsDataInput!]
}

input SheetsDataCreateOrConnectWithoutSchoolsInput {
  create: SheetsDataCreateWithoutSchoolsInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataCreateOrConnectWithoutSetsDataInput {
  create: SheetsDataCreateWithoutSetsDataInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataCreateWithoutSchoolsInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  SetID: String
  SetsData: SetsDataCreateNestedOneWithoutSheetsDataInput
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetsDataCreateWithoutSetsDataInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolsCreateNestedOneWithoutSheetsDataInput
  SetID: String
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetsDataScalarWhereInput {
  AND: [SheetsDataScalarWhereInput!]
  Day: StringNullableFilter
  FilePathDWG: StringNullableFilter
  FilePathPDF: StringNullableFilter
  FilePathPNG: StringNullableFilter
  FilePathTIFF: StringNullableFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [SheetsDataScalarWhereInput!]
  OR: [SheetsDataScalarWhereInput!]
  SetID: StringNullableFilter
  Sheet_Number: StringNullableFilter
  Title: StringNullableFilter
  Year: StringNullableFilter
  id: IntFilter
  school_id: IntNullableFilter
  set_id: IntNullableFilter
}

input SheetsDataUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolsUpdateOneWithoutSheetsDataInput
  SetID: NullableStringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateOneWithoutSheetsDataInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetsDataUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetsDataUpdateManyWithWhereWithoutSchoolsInput {
  data: SheetsDataUpdateManyMutationInput!
  where: SheetsDataScalarWhereInput!
}

input SheetsDataUpdateManyWithWhereWithoutSetsDataInput {
  data: SheetsDataUpdateManyMutationInput!
  where: SheetsDataScalarWhereInput!
}

input SheetsDataUpdateManyWithoutSchoolsInput {
  connect: [SheetsDataWhereUniqueInput!]
  connectOrCreate: [SheetsDataCreateOrConnectWithoutSchoolsInput!]
  create: [SheetsDataCreateWithoutSchoolsInput!]
  delete: [SheetsDataWhereUniqueInput!]
  deleteMany: [SheetsDataScalarWhereInput!]
  disconnect: [SheetsDataWhereUniqueInput!]
  set: [SheetsDataWhereUniqueInput!]
  update: [SheetsDataUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [SheetsDataUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [SheetsDataUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input SheetsDataUpdateManyWithoutSetsDataInput {
  connect: [SheetsDataWhereUniqueInput!]
  connectOrCreate: [SheetsDataCreateOrConnectWithoutSetsDataInput!]
  create: [SheetsDataCreateWithoutSetsDataInput!]
  delete: [SheetsDataWhereUniqueInput!]
  deleteMany: [SheetsDataScalarWhereInput!]
  disconnect: [SheetsDataWhereUniqueInput!]
  set: [SheetsDataWhereUniqueInput!]
  update: [SheetsDataUpdateWithWhereUniqueWithoutSetsDataInput!]
  updateMany: [SheetsDataUpdateManyWithWhereWithoutSetsDataInput!]
  upsert: [SheetsDataUpsertWithWhereUniqueWithoutSetsDataInput!]
}

input SheetsDataUpdateWithWhereUniqueWithoutSchoolsInput {
  data: SheetsDataUpdateWithoutSchoolsInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataUpdateWithWhereUniqueWithoutSetsDataInput {
  data: SheetsDataUpdateWithoutSetsDataInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  SetID: NullableStringFieldUpdateOperationsInput
  SetsData: SetsDataUpdateOneWithoutSheetsDataInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetsDataUpdateWithoutSetsDataInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolsUpdateOneWithoutSheetsDataInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetsDataUpsertWithWhereUniqueWithoutSchoolsInput {
  create: SheetsDataCreateWithoutSchoolsInput!
  update: SheetsDataUpdateWithoutSchoolsInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataUpsertWithWhereUniqueWithoutSetsDataInput {
  create: SheetsDataCreateWithoutSetsDataInput!
  update: SheetsDataUpdateWithoutSetsDataInput!
  where: SheetsDataWhereUniqueInput!
}

input SheetsDataWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  confirmed: Boolean!
  id: String!
  isAdmin: Boolean!
  username: String!
}

input UserUpdateInput {
  confirmed: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserWhereUniqueInput {
  id: String
  username: String
}
