### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type MiscSheet {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: School
  Sheet_Number: String
  Title: String
  Year: String
  id: Int!
  school_id: Int
}

input MiscSheetCreateInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolCreateNestedOneWithoutMiscSheetsInput
  Sheet_Number: String
  Title: String
  Year: String
}

input MiscSheetCreateNestedManyWithoutSchoolsInput {
  connect: [MiscSheetWhereUniqueInput!]
  connectOrCreate: [MiscSheetCreateOrConnectWithoutSchoolsInput!]
  create: [MiscSheetCreateWithoutSchoolsInput!]
}

input MiscSheetCreateOrConnectWithoutSchoolsInput {
  create: MiscSheetCreateWithoutSchoolsInput!
  where: MiscSheetWhereUniqueInput!
}

input MiscSheetCreateWithoutSchoolsInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Sheet_Number: String
  Title: String
  Year: String
}

input MiscSheetScalarWhereInput {
  AND: [MiscSheetScalarWhereInput!]
  Day: StringNullableFilter
  FilePathDWG: StringNullableFilter
  FilePathPDF: StringNullableFilter
  FilePathPNG: StringNullableFilter
  FilePathTIFF: StringNullableFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [MiscSheetScalarWhereInput!]
  OR: [MiscSheetScalarWhereInput!]
  Sheet_Number: StringNullableFilter
  Title: StringNullableFilter
  Year: StringNullableFilter
  id: IntFilter
  school_id: IntNullableFilter
}

input MiscSheetUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolUpdateOneWithoutMiscSheetsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetUpdateManyWithWhereWithoutSchoolsInput {
  data: MiscSheetUpdateManyMutationInput!
  where: MiscSheetScalarWhereInput!
}

input MiscSheetUpdateManyWithoutSchoolsInput {
  connect: [MiscSheetWhereUniqueInput!]
  connectOrCreate: [MiscSheetCreateOrConnectWithoutSchoolsInput!]
  create: [MiscSheetCreateWithoutSchoolsInput!]
  delete: [MiscSheetWhereUniqueInput!]
  deleteMany: [MiscSheetScalarWhereInput!]
  disconnect: [MiscSheetWhereUniqueInput!]
  set: [MiscSheetWhereUniqueInput!]
  update: [MiscSheetUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [MiscSheetUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [MiscSheetUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input MiscSheetUpdateWithWhereUniqueWithoutSchoolsInput {
  data: MiscSheetUpdateWithoutSchoolsInput!
  where: MiscSheetWhereUniqueInput!
}

input MiscSheetUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input MiscSheetUpsertWithWhereUniqueWithoutSchoolsInput {
  create: MiscSheetCreateWithoutSchoolsInput!
  update: MiscSheetUpdateWithoutSchoolsInput!
  where: MiscSheetWhereUniqueInput!
}

input MiscSheetWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneMiscSheet(data: MiscSheetCreateInput!): MiscSheet!
  createOneSchool(data: SchoolCreateInput!): School!
  createOneSet(data: SetCreateInput!): Set!
  createOneSheet(data: SheetCreateInput!): Sheet!
  deleteOneMiscSheet(where: MiscSheetWhereUniqueInput!): MiscSheet
  deleteOneSchool(where: SchoolWhereUniqueInput!): School
  deleteOneSet(where: SetWhereUniqueInput!): Set
  deleteOneSheet(where: SheetWhereUniqueInput!): Sheet
  deleteOneUser(where: UserWhereUniqueInput!): User
  login(password: String!, username: String!): User
  logout: User
  register(password: String!, passwordVerify: String!, username: String!): User
  updateOneMiscSheet(data: MiscSheetUpdateInput!, where: MiscSheetWhereUniqueInput!): MiscSheet
  updateOneSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput!): School
  updateOneSet(data: SetUpdateInput!, where: SetWhereUniqueInput!): Set
  updateOneSheet(data: SheetUpdateInput!, where: SheetWhereUniqueInput!): Sheet
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  allClusters: [School]!
  allSchools: [School]!
  allUsers: [User]!
  miscSheet(where: MiscSheetWhereUniqueInput!): MiscSheet
  miscSheets(after: MiscSheetWhereUniqueInput, before: MiscSheetWhereUniqueInput, first: Int, last: Int): [MiscSheet!]!
  school(where: SchoolWhereUniqueInput!): School
  schools(after: SchoolWhereUniqueInput, before: SchoolWhereUniqueInput, first: Int, last: Int): [School!]!
  set(where: SetWhereUniqueInput!): Set
  sets(after: SetWhereUniqueInput, before: SetWhereUniqueInput, first: Int, last: Int): [Set!]!
  sheet(where: SheetWhereUniqueInput!): Sheet
  sheets(after: SheetWhereUniqueInput, before: SheetWhereUniqueInput, first: Int, last: Int): [Sheet!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type School {
  Cluster: School
  ClusterID: String
  ClusterSchools(after: SchoolWhereUniqueInput, before: SchoolWhereUniqueInput, first: Int, last: Int): [School!]!
  MiscSheets(after: MiscSheetWhereUniqueInput, before: MiscSheetWhereUniqueInput, first: Int, last: Int): [MiscSheet!]!
  SchoolID: String!
  SchoolName: String!
  Sets(after: SetWhereUniqueInput, before: SetWhereUniqueInput, first: Int, last: Int): [Set!]!
  Sheets(after: SheetWhereUniqueInput, before: SheetWhereUniqueInput, first: Int, last: Int): [Sheet!]!
  id: Int!
}

input SchoolCreateInput {
  Cluster: SchoolCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolCreateNestedManyWithoutClusterInput
  MiscSheets: MiscSheetCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  Sets: SetCreateNestedManyWithoutSchoolsInput
  Sheets: SheetCreateNestedManyWithoutSchoolsInput
}

input SchoolCreateNestedManyWithoutClusterInput {
  connect: [SchoolWhereUniqueInput!]
  connectOrCreate: [SchoolCreateOrConnectWithoutClusterInput!]
  create: [SchoolCreateWithoutClusterInput!]
}

input SchoolCreateNestedOneWithoutClusterSchoolsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutClusterSchoolsInput
  create: SchoolCreateWithoutClusterSchoolsInput
}

input SchoolCreateNestedOneWithoutMiscSheetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutMiscSheetsInput
  create: SchoolCreateWithoutMiscSheetsInput
}

input SchoolCreateNestedOneWithoutSetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutSetsInput
  create: SchoolCreateWithoutSetsInput
}

input SchoolCreateNestedOneWithoutSheetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutSheetsInput
  create: SchoolCreateWithoutSheetsInput
}

input SchoolCreateOrConnectWithoutClusterInput {
  create: SchoolCreateWithoutClusterInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutClusterSchoolsInput {
  create: SchoolCreateWithoutClusterSchoolsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutMiscSheetsInput {
  create: SchoolCreateWithoutMiscSheetsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutSetsInput {
  create: SchoolCreateWithoutSetsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutSheetsInput {
  create: SchoolCreateWithoutSheetsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateWithoutClusterInput {
  ClusterSchools: SchoolCreateNestedManyWithoutClusterInput
  MiscSheets: MiscSheetCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  Sets: SetCreateNestedManyWithoutSchoolsInput
  Sheets: SheetCreateNestedManyWithoutSchoolsInput
}

input SchoolCreateWithoutClusterSchoolsInput {
  Cluster: SchoolCreateNestedOneWithoutClusterSchoolsInput
  MiscSheets: MiscSheetCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  Sets: SetCreateNestedManyWithoutSchoolsInput
  Sheets: SheetCreateNestedManyWithoutSchoolsInput
}

input SchoolCreateWithoutMiscSheetsInput {
  Cluster: SchoolCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolCreateNestedManyWithoutClusterInput
  SchoolID: String!
  SchoolName: String!
  Sets: SetCreateNestedManyWithoutSchoolsInput
  Sheets: SheetCreateNestedManyWithoutSchoolsInput
}

input SchoolCreateWithoutSetsInput {
  Cluster: SchoolCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolCreateNestedManyWithoutClusterInput
  MiscSheets: MiscSheetCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  Sheets: SheetCreateNestedManyWithoutSchoolsInput
}

input SchoolCreateWithoutSheetsInput {
  Cluster: SchoolCreateNestedOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolCreateNestedManyWithoutClusterInput
  MiscSheets: MiscSheetCreateNestedManyWithoutSchoolsInput
  SchoolID: String!
  SchoolName: String!
  Sets: SetCreateNestedManyWithoutSchoolsInput
}

input SchoolScalarWhereInput {
  AND: [SchoolScalarWhereInput!]
  ClusterID: StringNullableFilter
  NOT: [SchoolScalarWhereInput!]
  OR: [SchoolScalarWhereInput!]
  SchoolID: StringFilter
  SchoolName: StringFilter
  id: IntFilter
}

input SchoolUpdateInput {
  Cluster: SchoolUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolUpdateManyWithoutClusterInput
  MiscSheets: MiscSheetUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sets: SetUpdateManyWithoutSchoolsInput
  Sheets: SheetUpdateManyWithoutSchoolsInput
}

input SchoolUpdateManyMutationInput {
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
}

input SchoolUpdateManyWithWhereWithoutClusterInput {
  data: SchoolUpdateManyMutationInput!
  where: SchoolScalarWhereInput!
}

input SchoolUpdateManyWithoutClusterInput {
  connect: [SchoolWhereUniqueInput!]
  connectOrCreate: [SchoolCreateOrConnectWithoutClusterInput!]
  create: [SchoolCreateWithoutClusterInput!]
  delete: [SchoolWhereUniqueInput!]
  deleteMany: [SchoolScalarWhereInput!]
  disconnect: [SchoolWhereUniqueInput!]
  set: [SchoolWhereUniqueInput!]
  update: [SchoolUpdateWithWhereUniqueWithoutClusterInput!]
  updateMany: [SchoolUpdateManyWithWhereWithoutClusterInput!]
  upsert: [SchoolUpsertWithWhereUniqueWithoutClusterInput!]
}

input SchoolUpdateOneWithoutClusterSchoolsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutClusterSchoolsInput
  create: SchoolCreateWithoutClusterSchoolsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutClusterSchoolsInput
  upsert: SchoolUpsertWithoutClusterSchoolsInput
}

input SchoolUpdateOneWithoutMiscSheetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutMiscSheetsInput
  create: SchoolCreateWithoutMiscSheetsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutMiscSheetsInput
  upsert: SchoolUpsertWithoutMiscSheetsInput
}

input SchoolUpdateOneWithoutSetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutSetsInput
  create: SchoolCreateWithoutSetsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutSetsInput
  upsert: SchoolUpsertWithoutSetsInput
}

input SchoolUpdateOneWithoutSheetsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutSheetsInput
  create: SchoolCreateWithoutSheetsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutSheetsInput
  upsert: SchoolUpsertWithoutSheetsInput
}

input SchoolUpdateWithWhereUniqueWithoutClusterInput {
  data: SchoolUpdateWithoutClusterInput!
  where: SchoolWhereUniqueInput!
}

input SchoolUpdateWithoutClusterInput {
  ClusterSchools: SchoolUpdateManyWithoutClusterInput
  MiscSheets: MiscSheetUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sets: SetUpdateManyWithoutSchoolsInput
  Sheets: SheetUpdateManyWithoutSchoolsInput
}

input SchoolUpdateWithoutClusterSchoolsInput {
  Cluster: SchoolUpdateOneWithoutClusterSchoolsInput
  MiscSheets: MiscSheetUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sets: SetUpdateManyWithoutSchoolsInput
  Sheets: SheetUpdateManyWithoutSchoolsInput
}

input SchoolUpdateWithoutMiscSheetsInput {
  Cluster: SchoolUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolUpdateManyWithoutClusterInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sets: SetUpdateManyWithoutSchoolsInput
  Sheets: SheetUpdateManyWithoutSchoolsInput
}

input SchoolUpdateWithoutSetsInput {
  Cluster: SchoolUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolUpdateManyWithoutClusterInput
  MiscSheets: MiscSheetUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sheets: SheetUpdateManyWithoutSchoolsInput
}

input SchoolUpdateWithoutSheetsInput {
  Cluster: SchoolUpdateOneWithoutClusterSchoolsInput
  ClusterSchools: SchoolUpdateManyWithoutClusterInput
  MiscSheets: MiscSheetUpdateManyWithoutSchoolsInput
  SchoolID: StringFieldUpdateOperationsInput
  SchoolName: StringFieldUpdateOperationsInput
  Sets: SetUpdateManyWithoutSchoolsInput
}

input SchoolUpsertWithWhereUniqueWithoutClusterInput {
  create: SchoolCreateWithoutClusterInput!
  update: SchoolUpdateWithoutClusterInput!
  where: SchoolWhereUniqueInput!
}

input SchoolUpsertWithoutClusterSchoolsInput {
  create: SchoolCreateWithoutClusterSchoolsInput!
  update: SchoolUpdateWithoutClusterSchoolsInput!
}

input SchoolUpsertWithoutMiscSheetsInput {
  create: SchoolCreateWithoutMiscSheetsInput!
  update: SchoolUpdateWithoutMiscSheetsInput!
}

input SchoolUpsertWithoutSetsInput {
  create: SchoolCreateWithoutSetsInput!
  update: SchoolUpdateWithoutSetsInput!
}

input SchoolUpsertWithoutSheetsInput {
  create: SchoolCreateWithoutSheetsInput!
  update: SchoolUpdateWithoutSheetsInput!
}

input SchoolWhereUniqueInput {
  SchoolID: String
  id: Int
}

type Set {
  Day: String
  ID: String!
  Key: Int!
  LocationNumber: String
  Month: String
  Schools: School
  Sheets(after: SheetWhereUniqueInput, before: SheetWhereUniqueInput, first: Int, last: Int): [Sheet!]!
  Title: String
  Type: String
  Year: String
  school_id: Int
}

input SetCreateInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  Schools: SchoolCreateNestedOneWithoutSetsInput
  Sheets: SheetCreateNestedManyWithoutSetsInput
  Title: String
  Type: String
  Year: String
}

input SetCreateNestedManyWithoutSchoolsInput {
  connect: [SetWhereUniqueInput!]
  connectOrCreate: [SetCreateOrConnectWithoutSchoolsInput!]
  create: [SetCreateWithoutSchoolsInput!]
}

input SetCreateNestedOneWithoutSheetsInput {
  connect: SetWhereUniqueInput
  connectOrCreate: SetCreateOrConnectWithoutSheetsInput
  create: SetCreateWithoutSheetsInput
}

input SetCreateOrConnectWithoutSchoolsInput {
  create: SetCreateWithoutSchoolsInput!
  where: SetWhereUniqueInput!
}

input SetCreateOrConnectWithoutSheetsInput {
  create: SetCreateWithoutSheetsInput!
  where: SetWhereUniqueInput!
}

input SetCreateWithoutSchoolsInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  Sheets: SheetCreateNestedManyWithoutSetsInput
  Title: String
  Type: String
  Year: String
}

input SetCreateWithoutSheetsInput {
  Day: String
  ID: String!
  LocationNumber: String
  Month: String
  Schools: SchoolCreateNestedOneWithoutSetsInput
  Title: String
  Type: String
  Year: String
}

input SetScalarWhereInput {
  AND: [SetScalarWhereInput!]
  Day: StringNullableFilter
  ID: StringFilter
  Key: IntFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [SetScalarWhereInput!]
  OR: [SetScalarWhereInput!]
  Title: StringNullableFilter
  Type: StringNullableFilter
  Year: StringNullableFilter
  school_id: IntNullableFilter
}

input SetUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolUpdateOneWithoutSetsInput
  Sheets: SheetUpdateManyWithoutSetsInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetUpdateManyWithWhereWithoutSchoolsInput {
  data: SetUpdateManyMutationInput!
  where: SetScalarWhereInput!
}

input SetUpdateManyWithoutSchoolsInput {
  connect: [SetWhereUniqueInput!]
  connectOrCreate: [SetCreateOrConnectWithoutSchoolsInput!]
  create: [SetCreateWithoutSchoolsInput!]
  delete: [SetWhereUniqueInput!]
  deleteMany: [SetScalarWhereInput!]
  disconnect: [SetWhereUniqueInput!]
  set: [SetWhereUniqueInput!]
  update: [SetUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [SetUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [SetUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input SetUpdateOneWithoutSheetsInput {
  connect: SetWhereUniqueInput
  connectOrCreate: SetCreateOrConnectWithoutSheetsInput
  create: SetCreateWithoutSheetsInput
  delete: Boolean
  disconnect: Boolean
  update: SetUpdateWithoutSheetsInput
  upsert: SetUpsertWithoutSheetsInput
}

input SetUpdateWithWhereUniqueWithoutSchoolsInput {
  data: SetUpdateWithoutSchoolsInput!
  where: SetWhereUniqueInput!
}

input SetUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Sheets: SheetUpdateManyWithoutSetsInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetUpdateWithoutSheetsInput {
  Day: NullableStringFieldUpdateOperationsInput
  ID: StringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolUpdateOneWithoutSetsInput
  Title: NullableStringFieldUpdateOperationsInput
  Type: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SetUpsertWithWhereUniqueWithoutSchoolsInput {
  create: SetCreateWithoutSchoolsInput!
  update: SetUpdateWithoutSchoolsInput!
  where: SetWhereUniqueInput!
}

input SetUpsertWithoutSheetsInput {
  create: SetCreateWithoutSheetsInput!
  update: SetUpdateWithoutSheetsInput!
}

input SetWhereUniqueInput {
  Key: Int
}

type Sheet {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  Month: String
  Schools: School
  Sets: Set
  Sheet_Number: String
  Title: String
  Year: String
  id: Int!
  school_id: Int
  set_id: Int
}

input SheetCreateInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolCreateNestedOneWithoutSheetsInput
  SetID: String
  Sets: SetCreateNestedOneWithoutSheetsInput
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetCreateNestedManyWithoutSchoolsInput {
  connect: [SheetWhereUniqueInput!]
  connectOrCreate: [SheetCreateOrConnectWithoutSchoolsInput!]
  create: [SheetCreateWithoutSchoolsInput!]
}

input SheetCreateNestedManyWithoutSetsInput {
  connect: [SheetWhereUniqueInput!]
  connectOrCreate: [SheetCreateOrConnectWithoutSetsInput!]
  create: [SheetCreateWithoutSetsInput!]
}

input SheetCreateOrConnectWithoutSchoolsInput {
  create: SheetCreateWithoutSchoolsInput!
  where: SheetWhereUniqueInput!
}

input SheetCreateOrConnectWithoutSetsInput {
  create: SheetCreateWithoutSetsInput!
  where: SheetWhereUniqueInput!
}

input SheetCreateWithoutSchoolsInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  SetID: String
  Sets: SetCreateNestedOneWithoutSheetsInput
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetCreateWithoutSetsInput {
  Day: String
  FilePathDWG: String
  FilePathPDF: String
  FilePathPNG: String
  FilePathTIFF: String
  LocationNumber: String
  Month: String
  Schools: SchoolCreateNestedOneWithoutSheetsInput
  SetID: String
  Sheet_Number: String
  Title: String
  Year: String
}

input SheetScalarWhereInput {
  AND: [SheetScalarWhereInput!]
  Day: StringNullableFilter
  FilePathDWG: StringNullableFilter
  FilePathPDF: StringNullableFilter
  FilePathPNG: StringNullableFilter
  FilePathTIFF: StringNullableFilter
  LocationNumber: StringNullableFilter
  Month: StringNullableFilter
  NOT: [SheetScalarWhereInput!]
  OR: [SheetScalarWhereInput!]
  SetID: StringNullableFilter
  Sheet_Number: StringNullableFilter
  Title: StringNullableFilter
  Year: StringNullableFilter
  id: IntFilter
  school_id: IntNullableFilter
  set_id: IntNullableFilter
}

input SheetUpdateInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolUpdateOneWithoutSheetsInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sets: SetUpdateOneWithoutSheetsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetUpdateManyMutationInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetUpdateManyWithWhereWithoutSchoolsInput {
  data: SheetUpdateManyMutationInput!
  where: SheetScalarWhereInput!
}

input SheetUpdateManyWithWhereWithoutSetsInput {
  data: SheetUpdateManyMutationInput!
  where: SheetScalarWhereInput!
}

input SheetUpdateManyWithoutSchoolsInput {
  connect: [SheetWhereUniqueInput!]
  connectOrCreate: [SheetCreateOrConnectWithoutSchoolsInput!]
  create: [SheetCreateWithoutSchoolsInput!]
  delete: [SheetWhereUniqueInput!]
  deleteMany: [SheetScalarWhereInput!]
  disconnect: [SheetWhereUniqueInput!]
  set: [SheetWhereUniqueInput!]
  update: [SheetUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [SheetUpdateManyWithWhereWithoutSchoolsInput!]
  upsert: [SheetUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input SheetUpdateManyWithoutSetsInput {
  connect: [SheetWhereUniqueInput!]
  connectOrCreate: [SheetCreateOrConnectWithoutSetsInput!]
  create: [SheetCreateWithoutSetsInput!]
  delete: [SheetWhereUniqueInput!]
  deleteMany: [SheetScalarWhereInput!]
  disconnect: [SheetWhereUniqueInput!]
  set: [SheetWhereUniqueInput!]
  update: [SheetUpdateWithWhereUniqueWithoutSetsInput!]
  updateMany: [SheetUpdateManyWithWhereWithoutSetsInput!]
  upsert: [SheetUpsertWithWhereUniqueWithoutSetsInput!]
}

input SheetUpdateWithWhereUniqueWithoutSchoolsInput {
  data: SheetUpdateWithoutSchoolsInput!
  where: SheetWhereUniqueInput!
}

input SheetUpdateWithWhereUniqueWithoutSetsInput {
  data: SheetUpdateWithoutSetsInput!
  where: SheetWhereUniqueInput!
}

input SheetUpdateWithoutSchoolsInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sets: SetUpdateOneWithoutSheetsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetUpdateWithoutSetsInput {
  Day: NullableStringFieldUpdateOperationsInput
  FilePathDWG: NullableStringFieldUpdateOperationsInput
  FilePathPDF: NullableStringFieldUpdateOperationsInput
  FilePathPNG: NullableStringFieldUpdateOperationsInput
  FilePathTIFF: NullableStringFieldUpdateOperationsInput
  LocationNumber: NullableStringFieldUpdateOperationsInput
  Month: NullableStringFieldUpdateOperationsInput
  Schools: SchoolUpdateOneWithoutSheetsInput
  SetID: NullableStringFieldUpdateOperationsInput
  Sheet_Number: NullableStringFieldUpdateOperationsInput
  Title: NullableStringFieldUpdateOperationsInput
  Year: NullableStringFieldUpdateOperationsInput
}

input SheetUpsertWithWhereUniqueWithoutSchoolsInput {
  create: SheetCreateWithoutSchoolsInput!
  update: SheetUpdateWithoutSchoolsInput!
  where: SheetWhereUniqueInput!
}

input SheetUpsertWithWhereUniqueWithoutSetsInput {
  create: SheetCreateWithoutSetsInput!
  update: SheetUpdateWithoutSetsInput!
  where: SheetWhereUniqueInput!
}

input SheetWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  confirmed: Boolean!
  id: String!
  isAdmin: Boolean!
  username: String!
}

input UserUpdateInput {
  confirmed: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserWhereUniqueInput {
  id: String
  username: String
}
